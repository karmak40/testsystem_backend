// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using testsystem.context;

namespace testsystem.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20180912085846_CreateFinalRealation1")]
    partial class CreateFinalRealation1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("testsystem.Models.Entities.Candidat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<long>("ExpiredDate");

                    b.Property<long>("InvitationDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Number");

                    b.Property<string>("Phone");

                    b.Property<int?>("PositionId");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.ToTable("Candidats");
                });

            modelBuilder.Entity("testsystem.Models.Entities.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("CloseDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Number");

                    b.Property<long>("OpenDate");

                    b.Property<string>("Status");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("testsystem.Models.Entities.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Grade");

                    b.Property<string>("Number");

                    b.Property<int?>("TestId");

                    b.Property<int?>("ViewerId");

                    b.HasKey("Id");

                    b.HasIndex("TestId");

                    b.HasIndex("ViewerId");

                    b.ToTable("Rating");
                });

            modelBuilder.Entity("testsystem.Models.Entities.Test", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Answer");

                    b.Property<string>("Name");

                    b.Property<string>("Number");

                    b.Property<int?>("PositionId");

                    b.Property<long>("Time");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.ToTable("Test");
                });

            modelBuilder.Entity("testsystem.Models.Entities.Viewer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<long>("InvitationDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Number");

                    b.Property<int?>("PositionId");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.ToTable("Viewers");
                });

            modelBuilder.Entity("testsystem.Models.Entities.Candidat", b =>
                {
                    b.HasOne("testsystem.Models.Entities.Position", "Position")
                        .WithMany("Candidats")
                        .HasForeignKey("PositionId");
                });

            modelBuilder.Entity("testsystem.Models.Entities.Rating", b =>
                {
                    b.HasOne("testsystem.Models.Entities.Test", "Test")
                        .WithMany("Rating")
                        .HasForeignKey("TestId");

                    b.HasOne("testsystem.Models.Entities.Viewer", "Viewer")
                        .WithMany("Tests")
                        .HasForeignKey("ViewerId");
                });

            modelBuilder.Entity("testsystem.Models.Entities.Test", b =>
                {
                    b.HasOne("testsystem.Models.Entities.Position", "Position")
                        .WithMany("Tests")
                        .HasForeignKey("PositionId");
                });

            modelBuilder.Entity("testsystem.Models.Entities.Viewer", b =>
                {
                    b.HasOne("testsystem.Models.Entities.Position", "Position")
                        .WithMany("Viewers")
                        .HasForeignKey("PositionId");
                });
#pragma warning restore 612, 618
        }
    }
}
